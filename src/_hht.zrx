/* REXX _hht.zrx by the reverend (build 8)                                    */
/*-       built by rev-builder version 1.3a on 22 Mar 2014 at 00:15:33       -*/
/*- ------------------------------------------------------------------------ -*/
/*- This script is free, and can be modified for your personal use, but you  -*/
/*- cannot copy or distribute this script or any derivative work based upon  -*/
/*- this script without the express permission of the author.                -*/
/*-                                                                          -*/
/*- This script is provided to you WITHOUT ANY WARRANTY, even the implied    -*/
/*- warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.         -*/
/*-                                                                          -*/
/*-                       Copyright (C) 2009 Ron Wilson                      -*/
/*- ------------------------------------------------------------------------ -*/
/*- -----------------------*/ _g.!sname="_hht.zrx" /*----------------------- -*/
/*- ---------------*/ _g.!sbuild=8; _g.!sdate="2014-03-22" /*--------------- -*/
/*- ------------------------------------------------------------------------ -*/
call _timeout 60
call zocsynctime 300
call on halt name _halt
if \_yesno("run script?") then exit
if _sendwait("cspace ghost^Myomomma^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("calexio^Malexio^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cbait^M123456^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cbazzaarr^Mjnknsk^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cbill preston^Mbyd3txcz^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cblack bart^M77267726^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cblackhawk^Mnewport^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("ccorran^Mtigger^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("ccoke^MPumpkin^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("ccrosby^Mogle34^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cdevils^M22778800^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cdracula^Mdracula^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cexcalibur^Mpointy^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cflip^Mfvcdsxza^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cfork^Mwilliam^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cgrimtrigger^Mt2002wgt^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cjesseshrake^Mshrake1^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cjester^Mshuithead^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("ckaus^Mmalin77^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("clonestar^Mflooron^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cmasterbaiter^Mmonnie^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cmisbehavin^Mpottery^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cmuss^Mfadal01^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cmystic marauder^Mslammm^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cmykil^Mmarriage^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("coso^Mshannon1^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cpatriot^Mbuffalo^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cphx^Mburn79^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cpraen^M8088nohd^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("crexxcrow^MA123456^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("creload^Myaya69^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("crg orion^Mpegasus1^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("criver rat^Msawmill^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("csingularity^Mhht6974^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("ctekman^Mworm456^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cxoqsnr^Mbuckshot^My", "Trade Wars 2002 Editor")=640 then exit
if _sendwait("cxxxthescrubxxx^Mtabletop^My", "Trade Wars 2002 Editor")=640 then exit
exit
/* END REXX */
/***                 THE REVEREND'S TW LIBRARY FOR ZOC/REXX                 ***/

/** _timeout v.1 **/
    _timeout: procedure expose (globals)
     if _g.!timeout="_G.!TIMEOUT" then _g.!timeout=60
     rslt=_g.!timeout
     nt=_stripint(arg(1))
     if arg(1,"E") & nt>0 then do
      call zoctimeout nt
      _g.!timeout=nt
     end /*if*/
    return rslt

/** _halt v.4 **/
    _halt: procedure expose (globals)
     call off halt
     call _cleanup
     call zocwriteln "^[[1;33m< user abort >^[[0m "
     exit
    return

/** _yesno v.3 **/
    _yesno: procedure expose (globals)
     if arg(1,"E") then msg=arg(1)
     else msg="yes or no"
     if arg(2)="yn" then rslt=zocrequest(msg||" (ESC=no)", "yes", "no")
                    else rslt=zocrequest(msg, "yes", "no", "cancel")
     select
      when rslt="cancel" then call _quit "script cancelled by user.", "nocopy"
      when rslt="##CANCEL##" & arg(2)\="yn" then call _quit "script cancelled by user.", "nocopy"
      when rslt="yes" then rslt=1
      otherwise rslt=0
     end /*select*/
    return rslt

/** _sendwait v.1 **/
    _sendwait: procedure expose (globals)
     if \arg(1,"E") | \arg(2,"E") then call _error "missing parameter in _sendwait"
     call zocsend arg(1)
     rslt=_wait(arg(2))
     select
      when \arg(3,"E") | arg(3)=""             then nop
      when lower(arg(3))="timeout"  & rslt=640 then call _error "timeout"
      when lower(arg(3))="lastline" & rslt=640 then call _error "timeout"
      when lower(arg(3))="lastline"            then rslt=_lastline()
      otherwise nop
     end /*select*/
    return rslt

/** _stripint v.4 **/
    _stripint: procedure expose (globals)
     mask=_space(translate(arg(1)," ","-0123456789,"," "),0)
     rslt=word(_space(translate(_stripcomma(arg(1))," ",mask," ")),1)
     if rslt="" | rslt="-" then do; call _set_msg "##NAN##", "_stripint"; rslt=0; end
     else do
      if left(rslt,1)="-" then neg="-"; else neg=""
      rslt=_space(translate(rslt," ","-"),0)
      if length(rslt)>9 then rslt=left(rslt,9)
      rslt=neg||rslt
     end /*else*/
    return rslt

/** _cleanup v.1 **/
    _cleanup: procedure expose (globals)
     /* put code here to do custom cleanup
        for specific scripts and override
        it in your main program */
    return 1

/** _quit v.7 **/
    _quit: procedure expose (globals)
     lcpy=1
     arg1=""
     do i=1 to 2 /* manage arguments */
      select
       when arg(i,"E") & lower(arg(i))="nocopy" then lcpy=0
       when arg(i,"E") & arg1="" then arg1=arg(i)
       otherwise nop
      end /*select*/
     end /*do*/
     line=zocgetscreen(0, zocgetinfo("CURSOR-Y"), zocgetinfo("CURSOR-X"))
     select /* define message */
      when  lcpy & arg1="" then msg="^[[1;32m< end script >^[[0m^M^J"||line
      when \lcpy & arg1="" then msg="^[[1;32m< end script >^[[0m "
      when  lcpy           then msg="^[[1;32m^M^J< end script: "||arg1||" >^[[0m^M^J"||line
      when \lcpy           then msg="^[[1;32m^M^J< end script: "||arg1||" >^[[0m "
      otherwise nop
     end /*select*/
     call zocwrite msg
     select /* choose a beep */
      when lower(arg1)="script cancelled by user." then call _beep "cancel.wav"
      otherwise call _beep "quit.wav"
     end /*select*/
     exit
    return 1

/** _error v.9 **/
    _error: procedure expose (globals)
     call off halt
     call _cleanup
     call zocwrite _ansi("clearline;bt;frd")||"< script error ("||_g.!sname||" b."||_g.!sbuild||")"
     if arg(1,"E") then call zocwrite " : "||arg(1)
     call zocwriteln " >"
     call zocwriteln _ansi("bt;fye")||"< if this is a serious problem, email me at: revhelper_at_thereverend_dot_org > "
     call zocwriteln "< SCRIPT "||_g.!sname||", BUILD "||_g.!sbuild||", DATE "||_g.!sdate||" > "
     call zocwriteln "< ZOC VERSION '"||zocgetinfo("VERSION")||"', OS '"||zocgetinfo("OSYS")||"', LOCATION '"||zocgetinfo("CONNECTEDTO")||"' >"
     if arg(2,"E") then call zocwriteln _ansi("bt;fgr")||"< "||arg(2)||" >"
     call _beep "error.wav"
    exit

/** _wait v.1 **/
    _wait: procedure expose (globals)
     rslt=zocwait(arg(1))
    return rslt

/** _lastline v.3 **/
    _lastline: procedure expose (globals)
     rslt=zoclastline()
     select
      when lower(arg(1))="raw" then nop
      when pos(d2c(7),rslt)>0  then rslt=translate(zocstring("REMOVE", rslt, d2c(7)),"  ",d2c(0)||d2c(10))
      otherwise                     rslt=translate(rslt,"  ",d2c(0)||d2c(10))
     end /*select*/
    return rslt

/** _space v.1 **/
    _space: procedure expose (globals)
     str=strip(arg(1))
     if arg(2,"E") then n=arg(2); else n=1
     if arg(3,"E") then pad=arg(3); else pad=" "
     rslt=word(str,1)
     do i=2 to words(str)
      rslt=rslt||copies(pad,n)||word(str,i)
     end /*do*/
    return rslt

/** _stripcomma v.1 **/
    _stripcomma: procedure expose (globals)
     rslt=translate(_space(translate(arg(1),", "," ,"),0)," ",",")
    return rslt

    _set_msg: procedure expose (globals)
     i=_msg.0
     if i="_MSG.0" then do; _msg.=""; _msg.0=0; i=0; end
     i=i+1; _msg.0=i; _msg=""
     if arg(1,"E") then do; _msg.i=arg(1); _msg=arg(1); end;
     if arg(2,"E") then _msg.i.!source=arg(2)
     if arg(3,"E") then _msg.i.!comment=arg(3)
    return i

/** _beep v.2 **/
    _beep: procedure expose (globals)
     if arg(2,"E") then n=arg(2); else n=1
     if arg(3,"E") then d=arg(3); else d=0
     select
      when arg(1,"O") then call zocwrite copies(d2c(7),n)
      when _fileexists(arg(1)) then do
       do i=1 to n
        call zocplaysound arg(1)
        if i\=n & d>0 then call zocdelay d
       end /*do*/
      end /*when*/
      otherwise call zocwrite copies(d2c(7),n)
     end /*select*/
    return

/** _ansi v.3 **/
    _ansi: procedure expose (globals)
     rslt="0"
     pre=""
     do i=1 to _dwords(arg(1),";")
      w=_dword(arg(1),i,";")
      select
       when w="clearline" then pre=pre||"^[[100D^[[K"
       when w="dl"  then rslt=rslt||";"||0  /* dull               */
       when w="bt"  then rslt=rslt||";"||1  /* bright             */
       when w="ul"  then rslt=rslt||";"||4  /* underlined         */
       when w="blk" then rslt=rslt||";"||5  /* blinking           */
       when w="fbk" then rslt=rslt||";"||30 /* black foreground   */
       when w="frd" then rslt=rslt||";"||31 /* red foreground     */
       when w="fgr" then rslt=rslt||";"||32 /* green foreground   */
       when w="fye" then rslt=rslt||";"||33 /* yellow foreground  */
       when w="fbl" then rslt=rslt||";"||34 /* blue foreground    */
       when w="fmg" then rslt=rslt||";"||35 /* magenta foreground */
       when w="fcy" then rslt=rslt||";"||36 /* cyan foreground    */
       when w="fwh" then rslt=rslt||";"||37 /* white foreground   */
       when w="bbk" then rslt=rslt||";"||40 /* black background   */
       when w="brd" then rslt=rslt||";"||41 /* red background     */
       when w="bgr" then rslt=rslt||";"||42 /* green background   */
       when w="bye" then rslt=rslt||";"||43 /* yellow background  */
       when w="bbl" then rslt=rslt||";"||44 /* blue background    */
       when w="bmg" then rslt=rslt||";"||45 /* magenta background */
       when w="bcy" then rslt=rslt||";"||46 /* cyan background    */
       when w="bwh" then rslt=rslt||";"||47 /* white background   */
       otherwise nop
      end /*select*/
     end /*do*/
     rslt=pre||"^[["||rslt||"m"
    return rslt

/** _fileexists v.4 **/
    _fileexists: procedure expose (globals)
     select
      when \arg(1,"E") then call _error "missing parameter in _fileexists"
      when arg(1)="" then rslt=0
      when stream(arg(1), "C", "QUERY EXISTS")="" then rslt=0
      otherwise rslt=1
     end /*select*/
    return rslt

/** _dwords v.2 **/
    _dwords: procedure expose (globals)
     rslt=words(translate(arg(1),arg(2)||" "," "||arg(2)))
    return rslt

/** _dword v.2 **/
    _dword: procedure expose (globals)
     rslt=translate(word(translate(arg(1),arg(3)||" "," "||arg(3)),arg(2))," "||arg(3),arg(3)||" ")
    return rslt
