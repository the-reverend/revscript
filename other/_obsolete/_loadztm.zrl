/** _loadztm v.4 **/
_loadztm: procedure expose (globals)
 ns=arg(1)
 fname=arg(2)
 wns=length(ns)

 call _newline
 call zocwrite _ansi("bt;fcy")||"reading "||fname||" "
 if _fileopenr(fname) then do

  eof=_fileeof(fname)

  _s.=""
  z.=""
  mon=0
  do while \eof
  
   line=linein(fname)
   if left(line,7)=="  TO > " then do
    line=linein(fname)
    if line\="" then do
     parse var line sec1 " > " line
     sec1=_stripint(sec1)
     do while line\=""
      parse var line sec2 ">" line
      sec2=_stripint(sec2)
      z.sec1=_listadd(sec2,z.sec1)
      sec1=sec2
      if line="" then line=linein(fname)
     end /*do*/
    end /*do*/
    mon=_spinner(mon,50)
   end /*if*/
  
   eof=_fileeof(fname)
  
  end /*do*/

  call _fileclose fname

 end /*if*/
 else call zocwrite "x"

return