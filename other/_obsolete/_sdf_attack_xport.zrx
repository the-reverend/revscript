/* REXX _sdf_attack_xport by the reverend (build 21) */

call zoctimeout 240
call zocsynctime 500
call on halt name _halt

ship.=0
ship.1=_asknum("what ship number are you in?", ship.1)
if ship.1=0 then call _quit "invalid ship number"
if ship.1="##CANCEL##" then call _quit "script cancelled by user"

ship.2=_asknum("what ship will you transport to?", ship.2)
if ship.2=0 then call _quit "invalid ship number"
if ship.2="##CANCEL##" then call _quit "script cancelled by user"

i=2
done=0
do while \done
 ans=zocwaitmux(" lifts off from ", "R SDF end", "<Quit>")
 select
  when ans=0 then do
   call zocsend "ay1^M"
   if zocwait("Command [")=640 then call _error "timeout"
   if \_transport(ship.i, "quiet") then call _error "unable to transport"
   if i=1 then i=2
   else i=1
  end /* when */
  when ans=1 then done=1
  when ans=2 then do
   call zocsend "n"
   done=1
  end /* when */
  when ans=640 then call _error "timeout"
 end /* select */
end /* do */

call _quit

exit

/*** THE REVEREND'S TW LIBRARY FOR ZOC/REXX ***/
/*    last updated: 21 Aug 2001, 15:57:37     */

/** _asknum v.3 **/
    _asknum:
     aninit=arg(2)
     andone=0
     do while \andone
      anans=zocask(arg(1), aninit)
      if anans="##CANCEL##" then andone=1
      else do
       anans=_stripint(anans)
       if anans\="" then andone=1
      end /* else */
      if \andone then aninit="please enter a number or ESC to cancel."
     end /* do */
     if lower(arg(3))="c" & anans="##CANCEL##" then call _quit "script cancelled by user."
    return anans

/** _beep v.1 **/
    _beep:
     bpfile=arg(1)
     if bpfile\="" then if \_fileexists(bpfile) then bpfile=""
     if bpfile="" then call zocwrite d2c(7)
     else do
      bptemp=zocgetprogramoption("SoundBellWav")
      parse var bptemp 'SoundBellWav="' bptemp '"'
      call zocsetglobaloption('SoundBellWav="'||bpfile||'"')
      call zocwrite d2c(7)
      call zocsetglobaloption('SoundBellWav="'||bptemp||'"')
     end /* else */
    return

/** _error v.3 **/
    _error:
     if arg(1)="" then call zocterminate
     else errmsg="<< script error:  "||arg(1)||" >>"
     errmail="<< if this is a serious problem, email me at: tw.the_reverend@excite.com >> "

     eline=zocgetscreen(0, zocgetinfo("CURSOR-Y"), zocgetinfo("CURSOR-X"))
     if length(eline)>0 then call zocwriteln
     call zocwriteln "^[[1;31m"||errmsg||"^[[0;35m"
     if arg(1)\="timeout" then call zocwriteln "^[[1;33m"||errmail||"^[[0;35m"
     if length(eline)>0 then call zocwrite eline
     call _beep "error.wav"
     exit
    return

/** _fileexists v.1 **/
    _fileexists:
     if stream(arg(1), "C", "QUERY EXISTS")="" then fer=0
     else fer=1
    return fer

/** _halt v.1 **/
    _halt:
     call zocwriteln
     call zocwriteln "^[[1;33m<< script aborted by user. >>^[[0;35m "
     exit
    return

/** _quit v.3 **/
    _quit:
     if arg(1)=="" then qmsg="<< script ended. >>"
     else qmsg="<< script ended:  "||arg(1)||" >>"
     qline=zocgetscreen(0, zocgetinfo("CURSOR-Y"), zocgetinfo("CURSOR-X"))
     if length(qline)>0 then call zocwriteln
     call zocwriteln "^[[1;32m"||qmsg||"^[[0;35m"
     if length(qline)>0 then call zocwrite qline
     if arg(1)="script cancelled by user." then call _beep "cancel.wav"
     else call _beep "quit.wav"
     exit
    return 1

/** _stripint v.2 **/
    _stripint:
     stint=""
     sttemp=strip(arg(1))
     if bdflag=1 then call _error
     do sti=1 to length(sttemp)
      stchar=substr(sttemp,sti,1)
      if length(stint)=0 then do
       if verify(stchar,"1234567890-")=0 then stint=stint||stchar
      end /* if */
      else if verify(stchar,"1234567890")=0 then stint=stint||stchar
     end /* do */
     if \datatype(stint,"W") then stint=""
    return stint

/** _transport v.3 **/
    _transport:
     xship=arg(1)
     if arg(2)="quiet" then xquiet=1
     else xquiet=0
     xsuccess=1

     if xquiet then call zocsend "x "
     else call zocsend "x"

     if zocwait("<Transport to Ship>")=640 then call _error "timeout"

     xdone=0
     do while \xdone
      xans=zocwaitmux("[Pause]", "ship to beam to (Q=Quit)", "WARNING!")
      select
       when xans=0 then do
        if xquiet then call zocsend "  "
        else call zocsend "^M"
       end /* when */
       when xans=1 then xdone=1
       when xans=2 then nop
       when xans=640 then call _error "timeout"
       otherwise nop
      end /* select */
     end /* do */

     if xquiet then call zocsend xship||"^M "
     else call zocsend xship||"^M"

     xans=zocwaitmux("Security code accepted", "not an available ship")
     select
      when xans=0 then xsuccess=1
      when xans=1 then xsuccess=0
      when xans=640 then call _error "timeout"
      otherwise nop
     end /* select */

     xdone=0
     do while \xdone
      xans=zocwaitmux("[Pause]", "ship to beam to (Q=Quit)")
      select
       when xans=0 then do
        if xquiet then call zocsend "  "
        else call zocsend "^M"
       end /* when */
       when xans=1 then xdone=1
       when xans=640 then call _error "timeout"
       otherwise nop
      end /* select */
     end /* do */
     call zocsend "q"
     if zocwait("Command [")=640 then call _error "timeout"

    return xsuccess

