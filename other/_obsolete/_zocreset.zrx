/* REXX _zocreset by the reverend (build 0) */

fname="phonebk"
tname="phonebk.tmp"
bname="phonebk.bak"

if \_fileexists(fname) then do
 call zocwriteln "error: "||fname||" does not exist."
 call zocterminate
end /* if */
if \_fileopenr(fname) then do
 call zocwriteln "error: unable to open "||fname
 call zocterminate
end /* if */
if \_filenew(tname) then do
 call zocwriteln "error: unable to create "||tname
 call zocterminate
end /* if */

call zocwriteln "resetting registration..."

count=0
do while \_fileeof(fname)
 line=linein(fname)
 count=count+1
 if count\=3 then call lineout tname, line
end

call _fileclose fname
call _fileclose tname

if _fileexists(bname) then call zocfiledelete bname
call zocterminate

exit

/*** THE REVEREND'S TW LIBRARY FOR ZOC/REXX ***/
/*    last updated: 21 Sep 2001, 18:06:27     */

    _ansi:
     b=0
     if arg(1)="b" then do
      b=1
      c=arg(2)
     end /* if */
     else c=arg(1)
     select
      when c="gray" then ansi=30
      when c="red" then ansi=31
      when c="green" then ansi=32
      when c="yellow" then ansi=33
      when c="blue" then ansi=34
      when c="magenta" then ansi=35
      when c="cyan" then ansi=36
      when c="white" then ansi=37
      otherwise ansi=37
     end /* select */
     ansi="^[["||b||";"||ansi||"m"
    return ansi

    _beep:
     bpfile=arg(1)
     if bpfile\="" then if \_fileexists(bpfile) then bpfile=""
     if bpfile="" then call zocwrite d2c(7)
     else do
      bptemp=zocgetprogramoption("SoundBellWav")
      parse var bptemp 'SoundBellWav="' bptemp '"'
      call zocsetglobaloption('SoundBellWav="'||bpfile||'"')
      call zocwrite d2c(7)
      call zocsetglobaloption('SoundBellWav="'||bptemp||'"')
     end /* else */
    return

    _error:
     if arg(1)="" then call zocterminate
     else errmsg="<< script error:  "||arg(1)||" >>"
     errmail="<< if this is a serious problem, email me at: tw.the_reverend@excite.com >> "

     eline=zocgetscreen(0, zocgetinfo("CURSOR-Y"), zocgetinfo("CURSOR-X"))
     if length(eline)>0 then call zocwriteln
     call zocwriteln "^[[1;31m"||errmsg||"^[[0;35m"
     if arg(1)\="timeout" then call zocwriteln "^[[1;33m"||errmail||"^[[0;35m"
     if length(eline)>0 then call zocwrite eline
     call _beep "error.wav"
     exit
    return

/** _fileclose v.1 **/
    _fileclose:
     call stream arg(1), "C", "CLOSE"
    return

/** _fileeof v.1 **/
    _fileeof:
     if stream(arg(1), "S")="READY" then feofr=0
     else feofr=1
    return feofr

/** _fileexists v.1 **/
    _fileexists:
     if stream(arg(1), "C", "QUERY EXISTS")="" then fer=0
     else fer=1
    return fer

/** _filenew v.1 **/
    _filenew:
     fnr=1
     fnname=arg(1)
     if fnname="" then call _error "no filename"
     if \_fileexists(fnname) then call stream fnname, "C", "OPEN WRITE"
     else do
      if lower(arg(2))="delete" then do
       call dosdel fnname
       if \_fileexists(fnname) then call stream fnname, "C", "OPEN WRITE"
       else fnr=0
      end /* if */
      else fnr=0
     end /* else */
    return fnr

/** _fileopenr v.1 **/
    _fileopenr:
     for=1
     foname=arg(1)
     if foname="" then call _error "no filename"
     for=_fileexists(foname)
     if for then do
      call stream foname, "C", "OPEN READ"
      for=\_fileeof(foname)
      if \for then call _fileclose foname
     end /* if */
    return for

